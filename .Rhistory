library (xaringan)
remotes::install_github("yihui/xaringan")
remotes::install_github("yihui/xaringan")
options(htmltools.dir.version = FALSE)
plot(cars, pch = 19, col = 'darkgray', las = 1)
library(fricatives)
library(readr)
fricatives <- read_csv("data_tidy/fricatives.csv")
View(fricatives)
library(fricatives)
fricatives:fricatices
fricatives = fricatices
fricatives = fricatives
View(fricatives)
fricatives = fricatives
fricatives %>%
summarize(s_cog = mean(s_cogMean), sh_cog = sd(sh_cogMean))
fricatives %>%
group_by(Regularity) %>%
summarize(s_cog = mean(s_cogMean), sh_cog = sd(sh_cogMean)) %>%
kable(cpation = "Table 1") %>%
kable_classic(full_width = F, html_font = "Cambria")
fricatives %>%
summary()
fricatives = fricatives
fricatives
fricatives %>%
summary()
fricatives = fricatives
fricatives %>%
summary(s_cog)
load("fricatives")
my_data <- read.csv("fricatives")
library(tidyverse)
library(knitr)
library(knitr)
library(kableExtra)
fricatives = fricatives
fricatives = fricatives
fricatives = fricatives
library(tidyverse)
library(knitr)
library(kableExtra)
my_data <- read.csv("fricatives")
library(tidyverse)
my_data <- read.csv("fricatives")
fricatives <- read.csv("~/Desktop/RCODE/pa4/data_raw/fricatives/fricatives.csv")
View(fricatives)
fricatives = fricatives
fricatives = fricatives
fricatives %>%
summary()
fricatives %>%
group_by(Regularity) %>%
summarize(s_cog = mean(s_cogMean), sh_cog = sd(sh_cogMean)) %>%
kable(cpation = "Table 1") %>%
kable_classic(full_width = F, html_font = "Cambria")
fricatives = fricatives
fricatives = fricatives
fricatives %>%
summary() %>%
kable(cpation = "Table 1") %>%
kable_classic(full_width = F, html_font = "Cambria")
theme(plot.title = element_text(hjust = 0.5))
fricatives %>%
summary() %>%
kable(cpation = "Table 1") %>%
kable_classic(full_width = F, html_font = "Cambria") +
theme(plot.title = element_text(hjust = 0.5))
fricatives %>%
summary() %>%
kable(cpation = "Table 1") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
theme(plot.title = element_text(hjust = 0.5))
fricatives %>%
summary() %>%
kable(cpation = "Table 1") %>%
kable_classic(full_width = F, html_font = "Cambria")
fricatives <- fricatives %>%
filter(., Valency < 5)
fricatives <- fricatives %>%
filter(., s_cog < 5)
fricatives <- fricatives %>%
filter(., s_cog < 5)
fricatives = fricatives
View(fricatives)
View(fricatives)
fricatives <- read.csv("~/Desktop/RCODE/pa4/data_raw/fricatives/fricatives.csv")
View(fricatives)
fricatives %>%
summary() %>%
kable(cpation = "Table 1") %>%
kable_classic(full_width = F, html_font = "Cambria")
fricatives %>%
summarize(., mean_s_cog = mean(s_cog)) %>%
kable(cpation = "Table 1") %>%
kable_classic(full_width = F, html_font = "Cambria")
install.packages("leaflet")
install.packages("Cairo")
yes
install.packages("Cairo")
options(htmltools.dir.version = FALSE)
library(tidyverse)
```{r setup, include = FALSE}
```{r setup, include=FALSE}
raw_fricatives = read.csv("../data_raw/fricatives.csv")
raw_fricatives = read.csv("../data_raw/fricatives.csv")
library(tidyverse)
Raw_Fricatives = read.csv("../data_raw/fricatives.csv")
Tidy_Fricatives = Raw_Fricatives %>%
pivot_longer(c(“s_cog”, “s_skewness”,“sh_cog”, “sh_skewness”), names_to = “type”, values_to = “value”) %>%
Tidy_Fricatives = Raw_Fricatives %>%
pivot_longer(c(“s_cog”, “s_skewness”, “sh_cog”, “sh_skewness”), names_to = “class”,     values_to = “hz”) %>%
Tidy_Fricatives = Raw_Fricatives %>%
pivot_longer(c(“s_cog”, “s_skewness”, “sh_cog”, “sh_skewness”), names_to = “class”, values_to = “hz”) %>%
```{r, tidy-data}
Tidy_Fricatives = Raw_Fricatives %>%
pivot_longer(c(“s_cog”, “s_skewness”, “sh_cog”, “sh_skewness”), names_to = “class”, values_to = “hz”) %>%
Tidy_Fricatives = Raw_Fricatives %>%
pivot_longer(c("s_cog", "s_skewness", "sh_cog", "sh_skewness"), names_to = "class", values_to = "hz") %>%
separate("class", into = c("phoneme", "metric"), sep = "_") %>%
pivot_wider(names_from = "metric", values_from = "hz")
Tidy_Fricatives = Raw_Fricatives %>%
pivot_longer(c("s_cog", "s_skewness", "sh_cog", "sh_skewness"), names_to = "class", values_to = "hz") %>%
separate("class", into = c("phoneme", "metric"), sep = "_") %>%
pivot_wider(names_from = "metric", values_from = "hz")
Tidy_Fricatives = Raw_Fricatives %>%
pivot_longer(c("s_cog", "s_skewness", "sh_cog", "sh_skewness"), names_to = "class", values_to = "hz") %>%
separate("class", into = c("phoneme", "metric"), sep = "_") %>%
pivot_wider(names_from = "metric", values_from = "hz")
View(Tidy_Fricatives)
View(Tidy_Fricatives)
Descriptive_Fricatives <- Tidy_Fricatives %>%
group_by(phoneme) %>%
summarize(Mean_cog = mean(cog), SDCog = sd(cog), Mean_skewness = mean(skewness), SS_skewness = sd(skewness))
View(Descriptive_Fricatives)
```{r}
kable(Descriptive_Fricatives[1:5], caption = “**Descriptive statistics for center of gravity and skewedness by phoneme (voiceless alveolar stop and voiceless prepalatal affricate)**“)
```
```{r} ##did work??
Descriptive_Fricatives %>%
kbl(caption = "Table 1.  Name Here") %>%
kable_classic(full_width = F, html_font = "Cambria")
```
Tidy_Fricatives %>%
ggplot(aes(x = phoneme, y = cog)) +
geom_boxplot() +
labs(x = "Phoneme", y = "Average center of gravity by trial", title = "Center of gravity by phoneme")
Tidy_Fricatives %>%
ggplot(aes(x = phoneme, y = cog)) +
geom_boxplot() +
labs(x = "Phoneme", y = "Average center of gravity by trial", title = "Center of gravity by phoneme")
Tidy_Fricatives %>%
ggplot(aes(x = phoneme, y = skewness)) +
geom_boxplot() +
labs(x = "Phoneme", y = "Average skewness across trials", title = "Skewness by phoneme") +
theme(plot.title = element_text(hjust = 0.5))
Tidy_Fricatives %>%
ggplot(aes(x = phoneme, y = cog)) +
geom_boxplot() +
labs(x = "Phoneme", y = "Average center of gravity by trial", title = "Center of gravity by phoneme") +
theme(plot.title = element_text(hjust = 0.5))
S_Model_Fricatives <- Tidy_Fricatives %>%
filter(., phoneme == "s")
S_Model_Fricatives %>%
ggplot(aes(x = skewness, y = cog)) +
geom_point() +
geom_smooth(method = lm) +
labs(x = "Skewness", y = "Center of gravity", title = "Center of gravity as a function of skewness for /s/") +
theme(plot.title = element_text(hjust = 0.5))
summary(S_Model_Regression)
S_Model_Regression <- lm(cog ~ skewness, data = S_Model_Fricatives) +
summary(S_Model_Regression)
summary(S_Model_Regression)
summary(S_Model_Regression)
summary(S_Model_Regression)
summary(S_Model_Regression)
summary(S_Model_Regression)
S_Model_Regression <- lm(cog ~ skewness, data = S_Model_Fricatives)
summary(S_Model_Regression)
summary(S_Model_Regression)
summary(S_Model_Regression)
library(patchwork)
install.packages("patchwork")
library(patchwork)
library(xaringan)
library(ds4ling)
ds4ling::diagnosis(S_Model_Regression)
ds4ling::diagnosis(S_Model_Regression)
install.packages(c("broom", "cli", "data.table", "desc", "dplyr", "farver", "insight", "isoband", "kableExtra", "lubridate", "officer", "pillar", "pkgload", "ps", "svglite", "tibble", "tidyr", "tinytex"))
install.packages(c("broom", "cli", "data.table", "desc", "dplyr", "farver", "insight", "isoband", "kableExtra", "lubridate", "officer", "pillar", "pkgload", "ps", "svglite", "tibble", "tidyr", "tinytex"))
install.packages(c("broom", "cli", "data.table", "desc", "dplyr", "farver", "insight", "isoband", "kableExtra", "lubridate", "officer", "pillar", "pkgload", "ps", "svglite", "tibble", "tidyr", "tinytex"))
install.packages(c("broom", "cli", "data.table", "desc", "dplyr", "farver", "insight", "isoband", "kableExtra", "lubridate", "officer", "pillar", "pkgload", "ps", "svglite", "tibble", "tidyr", "tinytex"))
install.packages(c("broom", "cli", "data.table", "desc", "dplyr", "farver", "insight", "isoband", "kableExtra", "lubridate", "officer", "pillar", "pkgload", "ps", "svglite", "tibble", "tidyr", "tinytex"))
install.packages(c("broom", "cli", "data.table", "desc", "dplyr", "farver", "insight", "isoband", "kableExtra", "lubridate", "officer", "pillar", "pkgload", "ps", "svglite", "tibble", "tidyr", "tinytex"))
install.packages(c("broom", "cli", "data.table", "desc", "dplyr", "farver", "insight", "isoband", "kableExtra", "lubridate", "officer", "pillar", "pkgload", "ps", "svglite", "tibble", "tidyr", "tinytex"))
install.packages(c("broom", "cli", "data.table", "desc", "dplyr", "farver", "insight", "isoband", "kableExtra", "lubridate", "officer", "pillar", "pkgload", "ps", "svglite", "tibble", "tidyr", "tinytex"))
options(htmltools.dir.version = FALSE)
ds4ling::diagnosis(S_Model_Regression)
library(tidyverse)
library(tidyverse)
library(knitr)
library(kableExtra)
library(patchwork)
library(xaringan)
library(ds4ling)
ds4ling::diagnosis(S_Model_Regression)
S_Model_Regression <- lm(cog ~ skewness, data = S_Model_Fricatives)
summary(S_Model_Regression)
ds4ling::diagnosis(S_Model_Regression)
S_Model_Regression <-lm(cog ` skewness, data = S_Model_Fricatives)
S_Model_Fricatives %>%
ggplot(aes(x = skewness, y = cog)) +
geom_point() +
geom_smooth(method = lm) +
labs(x = "Skewness", y = "Center of gravity", title = "Center of gravity as a function of skewness for /s/") +
theme(plot.title = element_text(hjust = 0.5))
S_Model_Regression <-lm(cog ~ skewness, data = S_Model_Fricatives)
S_Model_Fricatives %>%
ggplot(aes(x = skewness, y = cog)) +
geom_point() +
geom_smooth(method = lm) +
labs(x = "Skewness", y = "Center of gravity", title = "Center of gravity as a function of skewness for /s/") +
theme(plot.title = element_text(hjust = 0.5))
S_Model_Regression <- lm(cog ~ skewness, data = S_Model_Fricatives)
```{r, diagnostics}
S_Model_Regression <- lm(cog ~ skewness, data = S_Model_Fricatives)
ds4ling::diagnosis(S_Model_Regression)
summary(S_Model_Regression)
ds4ling::diagnosis(S_Model_Regression)
library(xfun)
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
options(htmltools.dir.version = FALSE)
ds4ling::diagnosis(S_Model_Regression) ##not working
ds4ling::diagnosis(S_Model_Regression) ##not working
devtools::install()
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(patchwork)
library(xaringan)
library(ds4ling)
Raw_Fricatives = read.csv("../data_raw/fricatives.csv")
Tidy_Fricatives = Raw_Fricatives %>%
pivot_longer(c("s_cog", "s_skewness", "sh_cog", "sh_skewness"), names_to = "class", values_to = "hz") %>%
separate("class", into = c("phoneme", "metric"), sep = "_") %>%
pivot_wider(names_from = "metric", values_from = "hz")
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(patchwork)
library(xaringan)
library(ds4ling)
Raw_Fricatives = read.csv("../data_raw/fricatives.csv")
Tidy_Fricatives = Raw_Fricatives %>%
pivot_longer(c("s_cog", "s_skewness", "sh_cog", "sh_skewness"), names_to = "class", values_to = "hz") %>%
separate("class", into = c("phoneme", "metric"), sep = "_") %>%
pivot_wider(names_from = "metric", values_from = "hz")
Descriptive_Fricatives <- Tidy_Fricatives %>%
group_by(phoneme) %>%
summarize(Mean_cog = mean(cog), SDCog = sd(cog), Mean_skewness = mean(skewness), SS_skewness = sd(skewness))
Descriptive_Fricatives %>%
kbl(caption = "Table 1.  Name Here") %>%
kable_classic(full_width = F, html_font = "Cambria")
Tidy_Fricatives %>%
ggplot(aes(x = phoneme, y = cog)) +
geom_boxplot() +
labs(x = "Phoneme", y = "Average center of gravity by trial", title = "Center of gravity by phoneme") +
theme(plot.title = element_text(hjust = 0.5))
```
ds4ling::diagnosis(S_Model_Regression) ##not working
Tidy_Fricatives %>%
ggplot(aes(x = phoneme, y = skewness)) +
geom_boxplot() +
labs(x = "Phoneme", y = "Average skewness across trials", title = "Skewness by phoneme") +
theme(plot.title = element_text(hjust = 0.5))
S_Model_Fricatives <- Tidy_Fricatives %>%
filter(., phoneme == "s")
S_Model_Regression <- lm(cog ~ skewness, data = S_Model_Fricatives)
summary(S_Model_Regression)
ds4ling::diagnosis(S_Model_Regression) ##not working
library(ds4ling)
devtools::install_github(repo = "jvcasillas/ds4ling", dependencies = TRUE)
library(ds4ling)
ds4ling::diagnosis(S_Model_Regression) ##not working
o
ds4ling::diagnosis(S_Model_Regression)
